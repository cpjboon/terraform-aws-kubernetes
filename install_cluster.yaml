- name: install Kubernetes Nodes
  hosts: all
  become: true
  vars:
    playbook_lock: /home/ubuntu/deployed.txt

  pre_tasks:
    - name: check for lock file
      ansible.builtin.stat:
        path: "{{ playbook_lock }}"
      register: lock_file

  tasks:
    - name: Install and Configure Kubernetes Cluster
      block:
        - name: Install master node with script
          ansible.builtin.script: scripts/install_master.sh
          args:
            executable: /bin/bash
          when: inventory_hostname in groups['master']

        - name: Install worker nodes with script
          ansible.builtin.script: scripts/install_worker.sh
          args:
            executable: /bin/bash
          when: inventory_hostname in groups['worker']

        - name: Get token from master node to join cluster
          ansible.builtin.command: kubeadm token create --print-join-command
          register: join_command
          when: inventory_hostname in groups['master']

        - name: set the output from the join command as a fact
          set_fact:
            execute_this: "{{ join_command['stdout'] }}"
          when: inventory_hostname in groups['master']

        - name: execute join command on worker nodes
          ansible.builtin.command: "{{ execute_this }}"
          when: inventory_hostname in groups['master']
          delegate_to: "{{ item }}"
          loop: "{{ groups['worker'] }}"

        - name: Set Lock file so that the playbook runs only once
          ansible.builtin.file:
            path: "{{ playbook_lock }}"
            state: touch

        - name: show master ip
          ansible.builtin.debug:
            msg: "To connect to the master node: ssh -i .ssh/id_rsa-tf ubuntu@{{ inventory_hostname }}"
          when: inventory_hostname in groups['master']
      when: not lock_file.stat.exists|bool
